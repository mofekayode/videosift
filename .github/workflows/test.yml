name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      
    - name: Create .env.local
      run: |
        cat > .env.local << EOF
        NEXT_PUBLIC_SUPABASE_URL=${{ secrets.SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.CLERK_PUBLISHABLE_KEY }}
        CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}
        YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }}
        OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
        EOF
        
    - name: Build application
      run: npm run build
      
    - name: Run Unit Tests
      run: npx playwright test tests/unit/
      
    - name: Run API Tests
      run: npx playwright test tests/api/
      
    - name: Run E2E Tests
      run: npx playwright test tests/e2e/
      
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
        
    - name: Upload test videos
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: test-videos
        path: test-results/
        retention-days: 7